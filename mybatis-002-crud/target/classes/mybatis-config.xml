<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <!--开启Mybatis标准日志实现-->
    <settings>
        <setting name="logImpl" value="STDOUT_LOGGING"/>
    </settings>

    <!--default表示默认使用的环境-->
    <!--默认环境什么意思？当你使用mybatis创建SqlSessionFactory对象的时候，没有指定环境的话，默认使用哪个环境-->
    <environments default="development">
        <!--其中的一个环境，连接的数据库是mybatis_test-->
        <!--一般一个数据库，对应一个SqlSessionFactory对象-->
        <!--一个环境environment会对应一个SqlSessionFactory对象-->
        <environment id="development">
            <!--
            transactionManager标签：
            1.作用：配置事务管理器，指定mybatis具体使用什么方式去管理事务
            2.type属性有两个值：
                第一个：JDBC,使用原生的JDBC代码来管理事务
                    conn.setAutoCommit(false);
                    ...
                    conn.commit();
                第二个：MANAGED,mybatis不再负责事务的管理，将事务管理交给其他的JEE（JavaEE）容器来管理，例如:Spring
            3.不区分大小写，但是不能写其他值，只能二选一
            -->
            <transactionManager type="JDBC"/>
            <!--
            dataSource配置：
            1.dataSource被称为数据源。
            2.dataSource作用是什么？为程序提供Connection对象。（但凡是给程序提供Connection对象的，都叫做数据源。）
            3.数据源实际上是一套规范。JDK中有这套规范：javax.sql.DataSource（这个数据源的规范，这套接口实际上是JDK规定的。）
            4.我们自己也可以编写数据源组件，只要实现javax.sql.DataSource接口就行了。实现接口当中所有的方法。这样就有了自己的数据源。
              比如你可以写一个属于自己的数据库连接池（数据库连接池是提供连接对象的，所以数据库连接池就是一个数据源）。
            5.常见的数据源组件有哪些呢【常见的数据库连接池有哪些呢】？
              阿里巴巴的德鲁伊连接池：druid
              c3p0
              dbcp
              ....
             6.type属性用来指定数据源的类型，就是指定具体使用什么方式来获取Connection对象：
               type属性有三个值：必须是三选一。
               type="[UNPOOLED|POOLED|JNDI]"
               UNPOOLED：不使用数据库连接池技术。每一次请求过来之后，都是创建新的Connection对象。
               POOLED：使用mybatis自己实现的数据库连接池。
               JNDI：集成其它第三方的数据库连接池。

               JNDI是一套规范。谁实现了这套规范呢？大部分的web容器都实现了JNDI规范：
               例如：Tomcat、Jetty、WebLogic、WebSphere，这些服务器(容器)都实现了JNDI规范。
               JNDI是：java命名目录接口。Tomcat服务器实现了这个规范。
            -->
            <dataSource type="POOLED">
                <property name="driver" value="com.mysql.cj.jdbc.Driver"/>
                <property name="url" value="jdbc:mysql://localhost:3306/mybatis_test"/>
                <property name="username" value="root"/>
                <property name="password" value="13801874064guoyu"/>
            </dataSource>
        </environment>
    </environments>

    <mappers>
        <!--执行xxxMapper.xml文件的路径-->
        <!--resource属性自动会从类的根路径下开始查找资源-->
        <mapper resource="CarMapper.xml"/>
        <mapper resource="UserMapper.xml"/>
    </mappers>

</configuration>